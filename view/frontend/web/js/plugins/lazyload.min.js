!function(t,e){"object"==typeof exports?module.exports=e(t):"function"==typeof define&&define.amd?define([],e):t.LazyLoad=e(t)}("undefined"!=typeof global?global:this.window||this.global,function(e){"use strict";"function"==typeof define&&define.amd&&(e=window);var r={src:"data-src",srcset:"data-srcset",selector:".lazyload",root:null,rootMargin:"0px",threshold:0};const o=function(){let r={},s=!1,t=0;var e=arguments.length;"[object Boolean]"===Object.prototype.toString.call(arguments[0])&&(s=arguments[0],t++);for(;t<e;t++)!function(t){for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(s&&"[object Object]"===Object.prototype.toString.call(t[e])?r[e]=o(!0,r[e],t[e]):r[e]=t[e])}(arguments[t]);return r};function s(t,e){this.settings=o(r,e||{}),this.images=t||document.querySelectorAll(this.settings.selector),this.observer=null,this.init()}if(s.prototype={init:function(){var o,t;e.IntersectionObserver?(t={root:(o=this).settings.root,rootMargin:this.settings.rootMargin,threshold:[this.settings.threshold]},this.observer=new IntersectionObserver(function(t){Array.prototype.forEach.call(t,function(e){if(e.isIntersecting){o.observer.unobserve(e.target);var r=e.target.getAttribute(o.settings.src),s=e.target.getAttribute(o.settings.srcset);"img"===e.target.tagName.toLowerCase()?(r&&(e.target.src=r),s&&(e.target.srcset=s)):e.target.style.backgroundImage="url("+r+")";let t=e.target.className;t.indexOf(" loaded")<0&&(e.target.className=t+" loaded")}})},t),Array.prototype.forEach.call(this.images,function(t){o.observer.observe(t)})):this.loadImages()},loadAndDestroy:function(){this.settings&&(this.loadImages(),this.destroy())},loadImages:function(){var s;this.settings&&(s=this,Array.prototype.forEach.call(this.images,function(t){var e=t.getAttribute(s.settings.src),r=t.getAttribute(s.settings.srcset);"img"===t.tagName.toLowerCase()?(e&&(t.src=e),r&&(t.srcset=r)):t.style.backgroundImage="url('"+e+"')",t.className=t.className+" loaded"}))},destroy:function(){this.settings&&(this.observer.disconnect(),this.settings=null)}},e.lazyload=function(t,e){return new s(t,e)},e.jQuery){const n=e.jQuery;n.fn.lazyload=function(t){return(t=t||{}).attribute=t.attribute||"data-src",new s(n.makeArray(this),t),this}}return s});